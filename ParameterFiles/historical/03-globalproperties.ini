# timezone
timezone=Asia/Kolkata

# time of market opening as HH:mm in the specified timezone
open=9:15

# time of market closing as HH:mm in the specified timezone
close=15:30


# A file containing broker information is needed for trading. However, if backtesting
# broker information might not be needed. Backtesting feature is still in infancy. Currently
# set connectionfileneeded as true. If set as true, we need to provide the name of the connection
# file. The  formation of the connection file will depend on the implementation of the Connection class.
# The default implementation provided works for Interactive Brokers.
connectionfileneeded=true
connectionfile=02-connections-inr.csv

# Amongst current implemented use cases, instrat can be used for trading, backtesting, collecting historical 
# data and publishing market data. Set trading to true if the use is for live trading.
backtest=false
trading=false
marketdata=true

# Parameters controlling symbol file requirement/generation 
# A file containing symbols to be traded. A symbol file may not be needed for a specified use case
# in which case set symbolfileneeded to false. If set to false, all other parameters are ignored.
symbolfileneeded=true
symbolfile=02-symbols-inr.csv
# It is possible to generate the symbol file programatically. If the user so desires, the class containing
# the logic to generate the symbol file has to be provided alongwith.
generatesymbolfile=true
symbolclass=com.incurrency.symbolfiles.SymbolFileHistoricalFuture



# file containing trading holidays in format yyyymmdd. All weekends (Saturday and Sunday) are assumed to be holidays.
holidayfile=holidays.csv

# If you need to add a new broker or customize the functioning of TWS, you can specify the class extending the
# Connection class.
connectionclass=com.incurrency.framework.TWSConnection

# inStrat can connect to multiple accounts of a given broker. It is possible to request snapshot data from all
# accounts by setting the following flag to true.
getsnapshotfromallconnections=false

# If running in a shell environment, please set headless to true
headless=false

# redis is a mandatory requirement for instrat setup  for trading and marketdata. The following parameters define the redis availablity
redisip=127.0.0.1
redisport=6379
# redis database that will store the executed orders/trades.
redisdbtrade=0
# redis database that will store tick data received during trading/marketdata publishing function
redisdbtick=9
# redis can optionally store symbols that are used to generate the symbol file
redisdbsymbol=2


# If instrat is used to source market data via the broker, then set subscribetomarketdata as true. 
# However, if instrat sources market data from redis pubsub, set subscribetomarketdata to false.
# redis pubsub requires an instance of instrat to run in publishing mode that allows multiple users to consume
# a broker subscription. Unless you have subscribed to instrat pubsub module, please set the below flag to true.
subscribetomarketdata=false
# if subscribetomarketdata is false,
# 1. threadlimit needs to be set. Threadlimit controls the number of parallel threads subscribing to market data publisher
threadlimit=1
# 2. Datasource provides the ip or domain name of the server which is running redis in publishing mode
datasource=127.0.0.1
#3. Topic is used to subscribe to the relevant stream. The topic on subscriber should be same as the topic on publisher.
topic=USD

# IB sends event codes that need to be interpreted. The following event codes are deemed to be equivalent to order cancellation.
# Please do not change these values unless you are aware of the internals of inStrat codel
deemedcancellation=103,135,201,202,461

# collectticks should be set to true if we want to collect all tick data received by instrat.
collectticks=false

# inStrat sends alerts on email. senderemail specifies the sender's email address.
senderemail = instrat.reporting@gmail.com
# password for sender email. This password is storeed without any encryption. It is STRONGLY RECOMMENDED that
# users setup a new gmail/ googleapps account with a password of their choice, just for the purpose of sending email via instrat.
senderemailpassword=!s2Wa*$ma
# An original email will always go to the email specified as the owner of the broker connection (in connections.csv)
# if a recipientemail is specified, all alerts will be bcc copied to the recipientemail. 
recipientemail =

# inStrat stores tick data in the redis database with id = 9. This database id is hardcoded in inStrat, so please
# dont use this database (database # 9) of redis for any other  processing. daysoftickhistory cleanup up and old
# data in redis that is older than daysoftickhistory
daysoftickhistory=2
# if you want to skip cleaning the tickhistory, set cleantickhistory to false.
cleantickhistory=true

#Parameters for backtest
# backtest prices can be tick or bar. if tick, bars are created using these "ticks"
backtestprices=tick
backtestvariationfile= 
# bars can be set as "realtimebars" or "tick". If excluded, tick is assumed
bars=realtimebars
# lowest denomination of barsize that is needed. 
barsize=1sec
