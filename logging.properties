############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.ConsoleHandler, java.util.logging.FileHandler, com.incurrency.framework.logging.ErrorHandler,com.incurrency.framework.logging.FiveSecondBarHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= INFO
############################################################
# Handlers
############################################################
# --- ConsoleHandler --- 
# Override of global logging level 
java.util.logging.ConsoleHandler.level=SEVERE 
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
#--- Filehandler ---
# Override of global logging level 
java.util.logging.FileHandler.level=ALL
java.util.logging.SimpleFormatter.format= [%1$TH:%1$TM:%1$TS.%1$TL]:%4$s:(%2$s): %5$s%6$s%n
#[%1$TH:%1$TM:%1$TS.%1$TL] %4$s: %5$s%6$s %n 
# above prints timestamp (1$),source (2$), log level (4$), the log message (5$) ,throwable and its backtrace (6$), if any
# for string formatting, look at this http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html#syntax 

# Naming style for the output file: 
# (The output file is placed in the directory 
# defined by the "user.home" System property.) 
java.util.logging.FileHandler.pattern=logs/IDT.%g.log
#java.util.logging.FileHandler.pattern=%h/java%u.log
# Limiting size of output file in bytes: 
java.util.logging.FileHandler.limit=0
# Number of output files to cycle through, by appending an integer to the base file name: 
java.util.logging.FileHandler.count=1
# Style of output (Simple or XML): 
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.filter=com.incurrency.framework.logging.ExcludeSevereFinerErrors

com.incurrency.framework.logging.ErrorHandler.pattern = logs/application.err
com.incurrency.framework.logging.ErrorHandler.limit = 0
com.incurrency.framework.logging.ErrorHandler.count = 1
com.incurrency.framework.logging.ErrorHandler.level = SEVERE
com.incurrency.framework.logging.ErrorHandler.formatter = java.util.logging.SimpleFormatter

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

com.incurrency.framework.logging.FiveSecondBarHandler.pattern = logs/bars.log
com.incurrency.framework.logging.FiveSecondBarHandler.limit = 0
com.incurrency.framework.logging.FiveSecondBarHandler.count = 1
com.incurrency.framework.logging.FiveSecondBarHandler.level = FINER
com.incurrency.framework.logging.FiveSecondBarHandler.formatter = java.util.logging.SimpleFormatter
com.incurrency.framework.logging.FiveSecondBarHandler.filter=com.incurrency.framework.logging.DisplayBars
#The filter ensures that only messages with String == "Bars" are sent to fivesecondbar.log

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
com.incurrency.level = FINER
#com.xyz.foo.level = SEVERE
#-DPropFile=F:\NetBeansProjects\inStrat\inStrat.properties -Djava.util.logging.config.file=F:\NetBeansProjects\inStrat\logging.properties
