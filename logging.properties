handlers= java.util.logging.ConsoleHandler, java.util.logging.FileHandler
.level= INFO
############################################################
# Handlers
############################################################
# --- ConsoleHandler --- 
# Override of global logging level 
java.util.logging.ConsoleHandler.level=SEVERE 
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
#--- Filehandler ---
# Override of global logging level 
java.util.logging.FileHandler.level=ALL
java.util.logging.SimpleFormatter.format= [%1$TH:%1$TM:%1$TS.%1$TL],%5$s%6$s%n
#[%1$TH:%1$TM:%1$TS.%1$TL] %4$s: %5$s%6$s %n 
# above prints timestamp (1$),source (2$), log level (4$), the log message (5$) ,throwable and its backtrace (6$), if any
# for string formatting, look at this http://docs.oracle.com/javase/6/docs/api/java/util/Formatter.html#syntax 

# Naming style for the output file: 
# (The output file is placed in the directory 
# defined by the "user.home" System property.) 
java.util.logging.FileHandler.pattern=logs/mds.csv
java.util.logging.FileHandler.limit=0
#java.util.logging.FileHandler.count=1
# Style of output (Simple or XML): 
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = FINEST
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
com.incurrency.level=FINEST
