/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.incurrency.algorithms.adr;

import com.incurrency.framework.TradingUtil;
import java.util.Arrays;

/**
 *
 * @author Pankaj
 */
public class ADRValues extends javax.swing.JFrame {

    /**
     * Creates new form ADRValues
     * 
     */
    
    String minReentryMove;
    String stopLoss;
    String takeProfit;
    String contractSize;
    boolean scalpingMode;
    boolean trackLosingZone;
    String scaleOutTargets;
    String scaleOutSizes;
    ADR a;
    
    public ADRValues(ADR a) {
        this.a=a;
        minReentryMove=String.valueOf(a.reentryMinimumMove);
        stopLoss=String.valueOf(a.getStopLoss());
        takeProfit=String.valueOf(a.trailingTP);
        contractSize=String.valueOf(a.getNumberOfContracts());
        scalpingMode=a.scalpingMode;
        trackLosingZone=a.isTrackLosingZone();
        scaleOutTargets=Arrays.toString(a.getScaleoutTargets()).replaceAll("\\[", "").replaceAll("\\]", "");
        scaleOutSizes=Arrays.toString(a.getScaleOutSizes()).replaceAll("\\[", "").replaceAll("\\]", "");
        initComponents();
        this.txtMinRentryMove.setText(minReentryMove);
        this.txtStopLoss.setText(this.stopLoss);
        this.txtTakeProfit.setText(this.takeProfit);
        this.txtContractCount.setText(this.contractSize);
        if(scalpingMode){
            this.btnScalpingTrue.setSelected(true);
        }else{
            this.btnScalpingFalse.setSelected(true);
        }
        if(trackLosingZone){
            this.btnLosingZoneTrue.setSelected(true);
        }else{
            this.btnLosingZoneFalse.setSelected(true);
        }
        this.txtScaleOutSizes.setText(scaleOutSizes);
        this.txtScaleOutTargets.setText(scaleOutTargets);
        
        
    }
    
    public ADRValues(){
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtStopLoss = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTakeProfit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnScalpingTrue = new javax.swing.JRadioButton();
        btnScalpingFalse = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        txtMinRentryMove = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnLosingZoneTrue = new javax.swing.JRadioButton();
        btnLosingZoneFalse = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txtContractCount = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtScaleOutTargets = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtScaleOutSizes = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("StopLoss");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        txtStopLoss.setText("jTextField2");
        txtStopLoss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStopLossActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(txtStopLoss, gridBagConstraints);

        jLabel2.setText("TakeProfit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        txtTakeProfit.setText("jTextField3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(txtTakeProfit, gridBagConstraints);

        jLabel3.setText("ScalpingMode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        buttonGroup1.add(btnScalpingTrue);
        btnScalpingTrue.setText("True");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(btnScalpingTrue, gridBagConstraints);

        buttonGroup1.add(btnScalpingFalse);
        btnScalpingFalse.setText("False");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(btnScalpingFalse, gridBagConstraints);

        jLabel4.setText("Min. Move for Reentry");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        txtMinRentryMove.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(txtMinRentryMove, gridBagConstraints);

        jLabel5.setText("Track Losing Zone");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        buttonGroup2.add(btnLosingZoneTrue);
        btnLosingZoneTrue.setText("True");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(btnLosingZoneTrue, gridBagConstraints);

        buttonGroup2.add(btnLosingZoneFalse);
        btnLosingZoneFalse.setText("False");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(btnLosingZoneFalse, gridBagConstraints);

        jLabel6.setText("Number of Contracts");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel6, gridBagConstraints);

        txtContractCount.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(txtContractCount, gridBagConstraints);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(btnUpdate, gridBagConstraints);

        jLabel7.setText("TPTargets");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel7, gridBagConstraints);

        txtScaleOutTargets.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(txtScaleOutTargets, gridBagConstraints);

        jLabel8.setText("TPContracts");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(jLabel8, gridBagConstraints);

        txtScaleOutSizes.setText("jTextField2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(txtScaleOutSizes, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtStopLossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStopLossActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStopLossActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        a.reentryMinimumMove=Double.valueOf(this.txtMinRentryMove.getText());
        a.setStopLoss(Double.valueOf(this.txtStopLoss.getText()));
        a.trailingTP=Double.valueOf(this.txtTakeProfit.getText());
        a.setNumberOfContracts(Integer.valueOf(this.txtContractCount.getText()));
        if(btnScalpingTrue.isSelected()){
            a.scalpingMode=true;
        }else{
            a.scalpingMode=false;
        }
        if(this.btnLosingZoneTrue.isSelected()){
            a.setTrackLosingZone(true);
        }else{
            a.setTrackLosingZone(false);
        }
        a.setScaleoutTargets(TradingUtil.convertArrayToDouble(this.txtScaleOutTargets.getText().split(",")));
        a.setScaleOutSizes(TradingUtil.convertArrayToInteger(this.txtScaleOutSizes.getText().split(",")));
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADRValues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADRValues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADRValues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADRValues.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnLosingZoneFalse;
    private javax.swing.JRadioButton btnLosingZoneTrue;
    private javax.swing.JRadioButton btnScalpingFalse;
    private javax.swing.JRadioButton btnScalpingTrue;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtContractCount;
    private javax.swing.JTextField txtMinRentryMove;
    private javax.swing.JTextField txtScaleOutSizes;
    private javax.swing.JTextField txtScaleOutTargets;
    private javax.swing.JTextField txtStopLoss;
    private javax.swing.JTextField txtTakeProfit;
    // End of variables declaration//GEN-END:variables
}
